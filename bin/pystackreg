#!/bin/sh

if [ $# -lt 1 ] || [ "$1" = "-h" ] || [ "$1" = "-?" ] || [ "$1" = "--help" ] ; then
    cat <<__EOT__

    Usage: $(basename "$0") <input tiff file> <output tiff file> [pystackreg method]

    the default pystackreg method is AFFINE

__EOT__
    exit 0
fi

FROM=$1
DEST=$2

METHOD="$3"
[ -z "$METHOD" ] && METHOD=AFFINE

{ [ -z "$FROM" ] || [ ! -f "$FROM" ]; } && {
    echo 'provide a tiff input file' >&2
    exit 1
}

[ -z "$DEST" ] && DEST="$(echo "$FROM" | sed 's/\.tiff?$//').out.tif"

# to full-path
FROM="$(realpath "$FROM")"
DEST="$(realpath "$DEST")"

python -c "
import time
import numpy as np
from pystackreg import StackReg
from skimage import io

print('saved image path: $DEST')
print('loading image:    $FROM')
img = io.imread('$FROM')
# clip = img[0].mean()
# np.clip(img, clip, None, out=img)
# img = img - clip
print('loaded image')
print('image shape:', img.shape)

sr = StackReg(StackReg.$METHOD)

t1 = time.perf_counter()
out = sr.register_transform_stack(img, reference='first')
del img
t2 = time.perf_counter()
print(f'Transformation completed in {t2-t1:.2f}s')

io.imsave('$DEST', out)

print('saved image: $DEST')
"
